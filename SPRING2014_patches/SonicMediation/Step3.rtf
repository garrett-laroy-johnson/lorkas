{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
\cocoascreenfonts1{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
\red191\green0\blue0;}
\deftab560
\pard\pardeftab560

\f0\fs24 \cf0 (\
\cf2 var\cf0  pitches, ezbalancegain, octavebox, octavetext, mixer, delayLine, delayslider2, delayslider1, delayslider3, delaytimesliders1,delaytimesliders2, delaytimesliders3, file_names, buf, strConv, strConvTurnOffBut, tromboneFilenames, tromboneConv, tromConvBut, pitchChangeButStr, pitchChangeButTrom, accelBuf, accelBuf2,\
mixer_slider1, mixer_slider2, mixer_slider3, mixer_slider4, strDelayLine, tromboneDelayLine; \
\
mixer = \cf2 Synth\cf0 .new(\cf3 "cutting_mixer"\cf0 ); \
\
delayLine = \cf2 Synth\cf0 .new(\cf3 "coif_delayLines"\cf0 );\
\
file_names = [\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softA1.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softC3.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softE4.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softA2.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softC4.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softF1.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softA3.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softC5.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softF2.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softA4.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softD1.wav"\cf0 ,       \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softF3.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softB1.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softD2.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softF4.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softB2.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softD3.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softG1.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softB3.wav"\cf0 ,       \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softD4.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softG2.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softB4.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softE1.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softG3.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softC1.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softE2.wav"\cf0 ,        \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softG4.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softC2.wav"\cf0 ,       \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Strings/Cello Soft/Cello softE3.wav"\cf0 ];\
	\
tromboneFilenames = [\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft A2.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft C3.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft D4.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft F2.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft G3.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft A3.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft C4.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft E2.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft F3.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft G4.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft B2.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft D2.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft E3.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft F4.wav"\cf0 ,\
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft B3.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft D3.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft E4.wav"\cf0 ,  \
	\cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Brass/Trombone/Standard/Soft Layer/TB Soft G2.wav"\cf0 ];\
	\
	\
\
accelBuf = \cf2 Buffer\cf0 .read(s, \cf3 "/Users/student/Desktop/Lorkas/sharp_debris.br.low.aif"\cf0 );\
accelBuf2 = \cf2 Buffer\cf0 .read(s, \cf3 "/Users/student/Desktop/Lorkas/Strings & Things/Ethnic/Temple Gong/Temple Gong 3.wav"\cf0 );			\
t = \cf2 Synth\cf0 .new(\cf4 \\accelWhiteNoiseSweep\cf0 , [\cf4 \\bufnum\cf0 , accelBuf, \cf4 \\bufnum2\cf0 , accelBuf2]);\
\
	\
		\
		\
strConv = \cf2 Array\cf0 .fill(4, \{ \
	\cf2 |i|\cf0 \
		\cf2 var\cf0  buf; \
		buf = \cf2 Buffer\cf0 .read(s, file_names[rand(file_names.size)]);  			\
		\cf2 Synth\cf0 .new(\cf3 "Multiply_Shit"\cf0 ,[\cf4 \\bufnum\cf0 , buf.bufnum] );\
	\}); \
\
\
tromboneConv = \cf2 Array\cf0 .fill(5, \{ \
	\cf2 |i|\cf0 \
		\cf2 var\cf0  buf; \
		buf = \cf2 Buffer\cf0 .read(s, tromboneFilenames[rand(tromboneFilenames.size)]);  			\
		\cf2 Synth\cf0 .new(\cf3 "Multiply_Shit"\cf0 ,[\cf4 \\bufnum\cf0 , buf.bufnum] );\
	\}); \
	\
\
	pitches = \cf2 Array\cf0 .fill(8, \{ \cf2 |i|\cf0  \cf2 Synth\cf0 .new(\cf3 "playBackRec_pitchChangeAudioIn"\cf0 , [\cf4 \\out\cf0 , 1, \cf4 \\bufnum\cf0 , 0, \cf4 \\pan\cf0 , 	\
	(2.0.rand-1), \cf4 \\bandwidth_ratio\cf0 , 0.001, \cf4 \\inAmpBus\cf0 , 0, \cf4 \\pitch_index\cf0 , 70.rand]); \});\
\
	strDelayLine = \cf2 Synth\cf0 .new(\cf3 "coif_delayLinesNoAmpMess"\cf0 , [\cf4 \\out\cf0 , 6, \cf4 \\linein\cf0 , 1]); \
	tromboneDelayLine = \cf2 Synth\cf0 .new(\cf3 "coif_delayLinesNoAmpMess"\cf0 , [\cf4 \\out\cf0 , 7, \cf4 \\linein\cf0 , 1]); \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\pardirnatural
\cf0 	w = \cf2 SCWindow\cf0 (\cf3 "Control Resonz Filters Chord"\cf0 , \cf2 Rect\cf0 (20, 600, 1500, 350));\
\pard\pardeftab560
\cf0 	w.front;\
	w.view.decorator = \cf2 FlowLayout\cf0 (w.view.bounds); \
	w.onClose_(\{ \
		0.for(pitches.size-1, \{\cf2 |i|\cf0  pitches[i].free;\}) ;\
		0.for(strConv.size-1, \{\cf2 |i|\cf0  strConv[i].free;\}); \
		0.for(tromboneConv.size-1, \{\cf2 |i|\cf0  tromboneConv[i].free;\}); \
		\});\
		\
	ezbalancegain = \cf2 Array\cf0 .new;\
	octavebox = \cf2 Array\cf0 .new;\
	octavetext = \cf2 Array\cf0 .new;\
	 \
	0.for(pitches.size-1, \{ \
		\cf2 |i|\cf0 \
		\cf2 var\cf0  slider, slider2, o_box, o_but, obut2, obut3, obut4, obut5;\
	 	slider =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					300 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "amp"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0.00000001, 15), \cf5 // control spec\cf0 \
					\{ \
						pitches[i].set(\cf4 \\amp\cf0 , slider.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);	\
				ezbalancegain.add(slider); \
						\
		o_but = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,90,20))\
			.states_([\
				[\cf3 "random pitch"\cf0 ],\
				[\cf3 "random again"\cf0 ],\
				\
			])\
			.action_(\{ \
				pitches[i].set(\cf4 \\pitch_index\cf0 , 70.rand);\
			\});\
			\
		obut2 = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,50,20))\
			.states_([\
				[\cf3 "up 1"\cf0 ],\
				[\cf3 "up 1"\cf0 ],\
				\
			])\
			.action_(\{ \
				pitches[i].get(\cf4 \\pitch_index\cf0 , \{ \cf2 arg\cf0  value;  pitches[i].set(\cf4 \\pitch_index\cf0 , value+1 ) \}); \
			\});\
			\
		obut3 = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,50,20))\
			.states_([\
				[\cf3 "down 1"\cf0 ],\
				[\cf3 "down 1"\cf0 ],\
				\
			])\
			.action_(\{ \
				pitches[i].get(\cf4 \\pitch_index\cf0 , \{ \cf2 arg\cf0  value;  pitches[i].set(\cf4 \\pitch_index\cf0 , value-1 ) \}); \
			\});\
		\
		obut4 = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,50,20))\
			.states_([\
				[\cf3 "up 8"\cf0 ],\
				[\cf3 "up 8"\cf0 ],\
				\
			])\
			.action_(\{ \
				pitches[i].get(\cf4 \\octave\cf0 , \{ \cf2 arg\cf0  value;  pitches[i].set(\cf4 \\octave\cf0 , value+1 ) \}); \
			\});\
		\
		obut5 = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,50,20))\
			.states_([\
				[\cf3 "dwn 8"\cf0 ],\
				[\cf3 "dwn 8"\cf0 ],\
				\
			])\
			.action_(\{ \
				pitches[i].get(\cf4 \\octave\cf0 , \{ \cf2 arg\cf0  value;  pitches[i].set(\cf4 \\octave\cf0 , value-1 ) \}); \
			\});\
			\
	 	slider2 =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "filter q"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0.001, 0.2), \cf5 // control spec\cf0 \
					\{ \
						pitches[i].set(\cf4 \\bandwidth_ratio\cf0 , slider2.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);	\
				ezbalancegain.add(slider2); \
				\
\
	\
				\
		octavetext.add(o_but);\
		octavetext.add(obut2);\
		octavetext.add(obut3);	\
		octavetext.add(obut4);\
		octavetext.add(obut5);\
		\
				\
		pitches[i].set(\cf4 \\amp\cf0 , 0);	\
		w.view.decorator.nextLine;\
	\
	\});\
	\
	w.view.decorator.nextLine;\
	w.view.decorator.nextLine;\
\
				delayslider1  =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "Delay 1"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0, 2), \cf5 // control spec\cf0 \
					\{ \
						delayLine.set(\cf4 \\delay1amp\cf0 , delayslider1.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);\
				\
				delaytimesliders1 = \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "Delay Time"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0.001, 3), \cf5 // control spec\cf0 \
					\{ \
						delayLine.set(\cf4 \\delaytime1\cf0 , delaytimesliders1.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);\
\
				\
				w.view.decorator.nextLine;\
	\
				\
				delayslider2  =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "Delay 2"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0, 2), \cf5 // control spec\cf0 \
					\{ \
						delayLine.set(\cf4 \\delay2amp\cf0 , delayslider2.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);	 \
				\
				delaytimesliders2 = \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "Delay Time"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0.001, 3), \cf5 // control spec\cf0 \
					\{ \
						delayLine.set(\cf4 \\delaytime2\cf0 , delaytimesliders2.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);\
				\
				w.view.decorator.nextLine;\
\
				delayslider3  =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "Delay 3"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0, 2), \cf5 // control spec\cf0 \
					\{ \
						delayLine.set(\cf4 \\delay3amp\cf0 , delayslider3.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);	 \
				\
	\
				delaytimesliders3 = \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
					500 @ 20, \cf5 // dimensions\cf0 \
					\cf3 "Delay Time"\cf0 , \cf5 // label\cf0 \
					\cf2 ControlSpec\cf0 (0.001, 3), \cf5 // control spec\cf0 \
					\{ \
						delayLine.set(\cf4 \\delaytime3\cf0 , delaytimesliders3.value);\
					\},\cf5 // action\cf0 \
					0 // initVal\
				);\
				w.view.decorator.nextLine;\
				w.view.decorator.nextLine;\
				\
				strConvTurnOffBut=  \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,100,20))\
					.states_([\
						[\cf3 "Turn Conv. ALL Str. Off"\cf0 ],\
						[\cf3 "Turn Conv. ALL Str. Off"\cf0 ],\
				\
					])\
				.action_(\{ \
					0.for( strConv.size-1 ,\{ \cf2 |i|\cf0  strConv[i].set(\cf4 \\amp\cf0 , 0) \} ); \
				\});\
\
				w.view.decorator.nextLine;\
				0.for(strConv.size-1, \{  \
					\cf2 |i|\cf0 \
					\cf2 var\cf0  slider, but;\
	 				slider =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
						300 @ 20, \cf5 // dimensions\cf0 \
						\cf3 "amp"\cf0 , \cf5 // label\cf0 \
						\cf2 ControlSpec\cf0 (0.00000001, 15), \cf5 // control spec\cf0 \
						\{ \
							strConv[i].set(\cf4 \\amp\cf0 , slider.value);\
						\},\cf5 // action\cf0 \
						0 // initVal\
					);	\
					strConv[i].set(\cf4 \\amp\cf0 , 0);\
					ezbalancegain.add(slider); \
					\
						but = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,75,20))\
						.states_([\
							[\cf3 "change"\cf0 ],\
							[\cf3 "change"\cf0 ],\
				\
						])\
					.action_(\{ \
						\cf2 var\cf0  buf; \
								\cf2 var\cf0  buf2; \
								buf2 = \cf2 Buffer\cf0 .read(s, file_names[rand(file_names.size)]);  	\
								strConv[i].get(\cf4 \\bufnum\cf0 , \{ \cf2 arg\cf0  value; strConv[i].set(\cf4 \\bufnum\cf0 , buf2.bufnum ) \}); \
					\});\
\
				       w.view.decorator.nextLine;\
				\});\
\
				w.view.decorator.nextLine;\
				w.view.decorator.nextLine;\
				\
				tromConvBut = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,100,20))\
					.states_([\
						[\cf3 "Turn Conv. ALL Trombone Off"\cf0 ],\
						[\cf3 "Turn Conv. ALL Trombone Off"\cf0 ],\
				\
					])\
				.action_(\{ \
					0.for( tromboneConv.size-1 ,\{ \cf2 |i|\cf0  strConv[i].set(\cf4 \\amp\cf0 , 0) \} ); \
				\});\
				\
				w.view.decorator.nextLine;\
\
\
				0.for(tromboneConv.size-1, \{  \
					\cf2 |i|\cf0 \
					\cf2 var\cf0  slider, but;\
	 				slider =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
						300 @ 20, \cf5 // dimensions\cf0 \
						\cf3 "amp"\cf0 , \cf5 // label\cf0 \
						\cf2 ControlSpec\cf0 (0.00000001, 15), \cf5 // control spec\cf0 \
						\{ \
							tromboneConv[i].set(\cf4 \\amp\cf0 , slider.value);\
						\},\cf5 // action\cf0 \
						0 // initVal\
					);	\
					tromboneConv[i].set(\cf4 \\amp\cf0 , 0);\
					ezbalancegain.add(slider); \
					\
					but = \cf2 SCButton\cf0 (w, \cf2 Rect\cf0 (20,20,75,20))\
						.states_([\
							[\cf3 "change"\cf0 ],\
							[\cf3 "change"\cf0 ],\
				\
						])\
					.action_(\{ \
						\cf2 var\cf0  buf; \
								\cf2 var\cf0  buf1; \
								buf1 = \cf2 Buffer\cf0 .read(s, tromboneFilenames[rand(tromboneFilenames.size)]);  	\
								tromboneConv[i].get(\cf4 \\bufnum\cf0 , \{ \cf2 arg\cf0  value; tromboneConv[i].set(\cf4 \\bufnum\cf0 , buf1.bufnum ) \}); \
					\});\
			\
				       w.view.decorator.nextLine;\
				\});\
\
\
				       w.view.decorator.nextLine;\
				       w.view.decorator.nextLine;\
				       w.view.decorator.nextLine;\
				       w.view.decorator.nextLine;\
				       w.view.decorator.nextLine;\
				       w.view.decorator.nextLine;\
				       w.view.decorator.nextLine;\
				       \
				    \
				    \
			 		mixer_slider1 =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
						1000 @ 20, \cf5 // dimensions\cf0 \
						\cf3 "reson filters"\cf0 , \cf5 // label\cf0 \
						\cf2 ControlSpec\cf0 (0.00000001, 5), \cf5 // control spec\cf0 \
						\{ \
							mixer.set(\cf4 \\amp1\cf0 , mixer_slider1.value);\
						\},\cf5 // action\cf0 \
						1 // initVal\
					);	\
		       		mixer.set(\cf4 \\amp1\cf0 , 1);\
		       		w.view.decorator.nextLine;\
\
					\
			 		mixer_slider2 =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
						1000 @ 20, \cf5 // dimensions\cf0 \
						\cf3 "strings"\cf0 , \cf5 // label\cf0 \
						\cf2 ControlSpec\cf0 (0.00000001, 5), \cf5 // control spec\cf0 \
						\{ \
							mixer.set(\cf4 \\amp2\cf0 , mixer_slider2.value);\
						\},\cf5 // action\cf0 \
						1 // initVal\
					);	\
					mixer.set(\cf4 \\amp2\cf0 , 1);\
	\
				       w.view.decorator.nextLine;\
				       \
\
			 		mixer_slider3 =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
						1000 @ 20, \cf5 // dimensions\cf0 \
						\cf3 "trombones"\cf0 , \cf5 // label\cf0 \
						\cf2 ControlSpec\cf0 (0.00000001, 5), \cf5 // control spec\cf0 \
						\{ \
							mixer.set(\cf4 \\amp3\cf0 , mixer_slider3.value);\
						\},\cf5 // action\cf0 \
						1 // initVal\
					);	\
					mixer.set(\cf4 \\amp3\cf0 , 1);					\
				       w.view.decorator.nextLine;\
				       \
				       \
\
			 		mixer_slider4 =  \cf2 EZSlider\cf0 (w, \cf5 // window\cf0 \
						1000 @ 20, \cf5 // dimensions\cf0 \
						\cf3 "accelerometer"\cf0 , \cf5 // label\cf0 \
						\cf2 ControlSpec\cf0 (0.00000001, 5), \cf5 // control spec\cf0 \
						\{ \
							mixer.set(\cf4 \\amp4\cf0 , mixer_slider4.value);\
						\},\cf5 // action\cf0 \
						1 // initVal\
					);	\
					mixer.set(\cf4 \\amp4\cf0 , 1);					\
				       w.view.decorator.nextLine;\
	\
)}